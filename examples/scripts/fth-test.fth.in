#! @prefix@/bin/@prog_name@ -Ds
\ @configure_input@
\ fth-test.fth -- object-type tests

\ Copyright (c) 2005-2012 Michael Scholz <mi-scholz@users.sourceforge.net>
\ All rights reserved.
\
\ Redistribution and use in source and binary forms, with or without
\ modification, are permitted provided that the following conditions
\ are met:
\ 1. Redistributions of source code must retain the above copyright
\    notice, this list of conditions and the following disclaimer.
\ 2. Redistributions in binary form must reproduce the above copyright
\    notice, this list of conditions and the following disclaimer in the
\    documentation and/or other materials provided with the distribution.
\
\ THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
\ ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
\ IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
\ ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
\ FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
\ DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
\ OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
\ HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
\ LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
\ OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
\ SUCH DAMAGE.
\
\ @(#)fth-test.fth.in	1.32 9/13/13

\ Commentary:
\
\ Usage: ./fth-test.fth [ number-of-loops-per-test ]
\        ./fth-test.fth       \ each test one time
\        ./fth-test.fth 100   \ each test 100 times

\ Code:

\ *argv* 0 -> script name
*argv* length 1 > [if]
	*argv* last-ref string->number
[else]
	1
[then] 1 max value test-count

\ Loading test files should not run their test loops, we run them.
0 value *fth-test-count*

: test-expr <{ expr info -- }>
	stack-reset
	expr if
		"\\ %s: %s\n" #( info expr ) fth-print
		'test-failed nil fth-throw
	then
;

"@top_srcdir@/tests" add-load-path

require array-test.fs
require list-test.fs
require hash-test.fs
require io-test.fs
require file-test.fs
require misc-test.fs
require numbers-test.fs
require proc-test.fs
require hook-test.fs
require string-test.fs
require regexp-test.fs
require symbol-test.fs

: run-fth-test { xt cnt -- }
	"\\ *** execute %s ...\n" #( xt xt->name ) fth-print
	stack-reset
	cnt 0 ?do
		xt #t nil fth-catch if
			stack-reset
			leave
		then
	loop
	.stack
;

stack-reset
make-timer value tm
tm start-timer
cr
<'>  array-test test-count run-fth-test
<'>   list-test test-count run-fth-test
<'>   hash-test test-count run-fth-test
<'>     io-test test-count run-fth-test
<'>   file-test test-count run-fth-test
<'>   misc-test test-count run-fth-test
<'> number-test test-count run-fth-test
<'>   proc-test test-count run-fth-test
<'>   hook-test test-count run-fth-test
<'> string-test test-count run-fth-test
<'> regexp-test test-count run-fth-test
<'> symbol-test test-count run-fth-test
cr
tm stop-timer
"summary: %s\n" #( tm ) fth-display
gc-stats
.memory cr cr

bye

\ fth-test.fth ends here
